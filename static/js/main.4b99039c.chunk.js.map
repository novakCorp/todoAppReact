{"version":3,"sources":["context/index.js","context/useLocalStorage.js","components/TodoCounter.jsx","components/TodoSearch.jsx","components/TodoList.jsx","components/TodoItems.jsx","components/TodoForm.jsx","components/CreateTodoButton.jsx","Modal/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","e","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","event","preventDefault","type","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.4b99039c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error,\n    } = useLocalStorage('TODOS_V1', []);\n\n\n    const [searchValue, setSearchValue] = React.useState('');\n    // modal state\n    const [openModal, setOpenModal] = useState(false);\n\n    // compare if the todo is completed or not\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = [];\n\n    if (!searchValue.length >= 1) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n            const todoText = todo.text.toLowerCase();\n            const searchText = searchValue.toLowerCase();\n            return todoText.includes(searchText);\n        });\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        });\n        saveTodos(newTodos);\n    };\n\n\n    const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = true;\n        saveTodos(newTodos);\n    };\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    };\n\n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            addTodo,\n            completeTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal,\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\nexport { TodoContext, TodoProvider };","import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n\n    React.useEffect(() => {\n        setTimeout(() => {\n            try {\n                const localStorageItem = localStorage.getItem(itemName);\n                let parsedItem;\n\n                if (!localStorageItem) {\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\n                    parsedItem = initialValue;\n                } else {\n                    parsedItem = JSON.parse(localStorageItem);\n                }\n\n                setItem(parsedItem);\n                setLoading(false);\n            } catch (error) {\n                setError(error);\n            }\n        }, 1000);\n    });\n\n    const saveItem = (newItem) => {\n        try {\n            const stringifiedItem = JSON.stringify(newItem);\n            localStorage.setItem(itemName, stringifiedItem);\n            setItem(newItem);\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    return {\n        item,\n        saveItem,\n        loading,\n        error,\n    };\n}\n\nexport { useLocalStorage };","import React, { useContext } from 'react';\nimport { TodoContext } from '../context';\nimport '../styles/TodoCounter.css';\n\n\n\n// we recieve props but we are selecting explicitly which ones we want\nconst TodoCounter = () => {\n\n    // using the context to pass the data\n    const { totalTodos, completedTodos } = useContext(TodoContext);\n\n    return (\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    );\n}\n\nexport { TodoCounter };","import React, { useContext } from 'react';\nimport { TodoContext } from '../context';\nimport '../styles/TodoSearch.css';\n\n// These props are the state in app.js, we can even pass a function as a prop\nconst TodoSearch = () => {\n\n    const { searchValue, setSearchValue } = useContext(TodoContext);\n\n    const onSearchValueChange = (e) => {\n        console.log(e.target.value);\n        // assigns the value to the state searchValue\n        setSearchValue(e.target.value);\n    }\n\n    return (\n        <input\n            className=\"TodoSearch\"\n            placeholder=\"Cebolla\"\n            value={searchValue}\n            onChange={onSearchValueChange}\n        />\n    );\n}\n\nexport { TodoSearch };","import React from \"react\";\nimport '../styles/TodoList.css';\n\nconst TodoList = (props) => {\n    return (\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport { TodoList };","import React from 'react';\nimport '../styles/TodoItem.css';\n\nfunction TodoItem(props) {\n\n    return (\n        <li className=\"TodoItem\">\n            <span\n                className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n                onClick={props.onComplete}\n            >\n                âˆš\n            </span>\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n                {props.text}\n            </p>\n            <span\n                className=\"Icon Icon-delete\"\n                onClick={props.onDelete}\n            >\n                X\n            </span>\n        </li>\n    );\n}\n\nexport { TodoItem };","import React, { useContext, useState } from 'react';\nimport { TodoContext } from '../context';\nimport '../styles/TodoForm.css'\n\nconst TodoForm = () => {\n\n    const [newTodoValue, setNewTodoValue] = useState('');\n    const { addTodo, setOpenModal } = useContext(TodoContext);\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    }\n\n    const onCancel = () => {\n        setOpenModal(false);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    }\n\n    return (\n        <form onSubmit={onSubmit} >\n            <label>Escribe tu nuevo To Do</label>\n            <textarea\n                value={newTodoValue}\n                onChange={onChange}\n                placeholder=\"Escribe una nueva tarea\"\n            />\n            <div className=\"TodoForm-buttonContainer\">\n                <button\n                    type=\"button\"\n                    className=\"TodoForm-button TodoForm-button-cancel\"\n                    onClick={onCancel}\n                >\n                    Cancelar\n                </button>\n\n                <button\n                    className=\"TodoForm-button TodoForm-button-add\"\n                    type=\"submit\"\n                >\n                    AÃ±adir\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport { TodoForm };","import React from 'react';\nimport '../styles/CreateTodoButton.css'\n\nconst CreateTodoButton = ({ setOpenModal }) => {\n\n    const onClickButton = () => {\n        // open the modal everytime the user clicks on the button\n        // last state for the modal, either you send true or false\n        setOpenModal(prevState => !prevState);\n    }\n\n    return (\n        <button\n            className=\"CreateTodoButton\"\n            onClick={onClickButton}\n        >\n            +\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../styles/Modal.css';\n\n// It will create and associate the modal with the file in the public/index\n// it receives props but we are selecting the children\n\nconst Modal = ({ children }) => {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    );\n}\n\nexport { Modal };","import React from 'react';\nimport { TodoContext } from '../context/index';\nimport { TodoCounter } from '../components/TodoCounter';\nimport { TodoSearch } from '../components/TodoSearch';\nimport { TodoList } from '../components/TodoList';\nimport { TodoItem } from '../components/TodoItems';\nimport { TodoForm } from '../components/TodoForm';\nimport { CreateTodoButton } from '../components/CreateTodoButton';\nimport { Modal } from '../Modal/index';\n\nfunction AppUI() {\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n    } = React.useContext(TodoContext);\n\n    return (\n        <React.Fragment>\n            <TodoCounter />\n            <TodoSearch />\n\n            <TodoList>\n                {error && <p>DesespÃ©rate, hubo un error...</p>}\n                {loading && <p>Estamos cargando, no desesperes...</p>}\n                {(!loading && !searchedTodos.length) && <p>Â¡Crea tu primer TODO!</p>}\n\n                {searchedTodos.map(todo => (\n                    <TodoItem\n                        key={todo.text}\n                        text={todo.text}\n                        completed={todo.completed}\n                        onComplete={() => completeTodo(todo.text)}\n                        onDelete={() => deleteTodo(todo.text)}\n                    />\n                ))}\n            </TodoList>\n\n            {!!openModal && (\n                <Modal>\n                    <TodoForm />\n                </Modal>\n            )}\n\n            <CreateTodoButton\n                setOpenModal={setOpenModal}\n            />\n        </React.Fragment>\n    );\n}\n\nexport { AppUI };","import React from 'react';\nimport { TodoProvider } from '../context/index';\nimport { AppUI } from './AppUI';\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}